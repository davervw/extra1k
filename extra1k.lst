; EXTRA1K.LST - Dump and Disassembly
;
; EXTRA1K.PRG - make 1K extra RAM available for BASIC
;
; Copyright (c) 2025 by David R. Van Wagner
; MIT LICENSE
;
; https://github.com/davervw/extra1k
;
; Moves BASIC RAM low pointer to $400 (1024)
; Moves Screen to $CC00
; Copies CHAR ROM $D000 to $F000 RAM (otherwise CHAR ROM is unavailable to VIC-II in bank 3)
; Handler code $CBA3 to $CBFF
;
; INSTRUCTIONS:
;    LOAD "EXTRA1K",8,1
;    SYS 52131
;
; or see EXTRA1228.PRG for another 204 bytes (steal cassette buffer and more)
;
; WARNING: 
;    $CBA3 to $CFFF is reserved, and screen memory has moved to 52224
;    May not be compatible as is with other BASIC extensions 
;      because of new WARMSTART handler used to keep changes from being reverted
;
; CREDITS: 
;   8-Bit Show And Tell (SYS 58266 = JMP E39A) https://youtu.be/WZQ1FMWnG9w
;   C64 RAM banks discussion https://techwithdave.davevw.com/2024/06/banktest-for-c64.html
;   CBM BASIC ROM WARMSTART Handler (JMP (0300), JMP E38B)
;   Jim Butterfield's SCREENMAP 64 for calculating POKEs to move screen/chars
;   Ultimate Commodore 64 Reference: ROM Disassembly https://www.pagetable.com/c64ref/c64disasm
;   Compute!'s Mapping the Commodore 64 https://archive.org/details/Compute_s_Mapping_the_Commodore_64
;   Programmed in VICE 3.8 monitor

; cba3 = 52131

>C:cba3  78 a0 00 84  fb a9 d0 85  fc a5 01 aa  29 f9 85 01
>C:cbb3  84 fd a9 f0  85 fe b1 fb  91 fd c8 d0  f9 e6 fc e6
>C:cbc3  fe d0 f3 86  01 58 8c 00  04 a9 01 a2  04 85 2b 86
>C:cbd3  2c a9 f9 a2  cb 8d 00 03  8e 01 03 20  e4 cb 4c 9a
>C:cbe3  e3 a9 04 8d  00 dd a9 cc  8d 88 02 ad  18 d0 29 0e
>C:cbf3  09 38 8d 18  d0 60 20 e4  cb 4c 8b e3  ea         

.C:cba3  78          SEI
.C:cba4  A0 00       LDY #$00
.C:cba6  84 FB       STY $FB
.C:cba8  A9 D0       LDA #$D0
.C:cbaa  85 FC       STA $FC
.C:cbac  A5 01       LDA $01
.C:cbae  AA          TAX
.C:cbaf  29 F9       AND #$F9
.C:cbb1  85 01       STA $01
.C:cbb3  84 FD       STY $FD
.C:cbb5  A9 F0       LDA #$F0
.C:cbb7  85 FE       STA $FE
.C:cbb9  B1 FB       LDA ($FB),Y
.C:cbbb  91 FD       STA ($FD),Y
.C:cbbd  C8          INY
.C:cbbe  D0 F9       BNE $CBB9
.C:cbc0  E6 FC       INC $FC
.C:cbc2  E6 FE       INC $FE
.C:cbc4  D0 F3       BNE $CBB9
.C:cbc6  86 01       STX $01
.C:cbc8  58          CLI
.C:cbc9  8C 00 04    STY $0400
.C:cbcc  A9 01       LDA #$01
.C:cbce  A2 04       LDX #$04
.C:cbd0  85 2B       STA $2B
.C:cbd2  86 2C       STX $2C
.C:cbd4  A9 F9       LDA #$F9
.C:cbd6  A2 CB       LDX #$CB
.C:cbd8  8D 00 03    STA $0300
.C:cbdb  8E 01 03    STX $0301
.C:cbde  20 E4 CB    JSR $CBE4
.C:cbe1  4C 9A E3    JMP $E39A
.C:cbe4  A9 04       LDA #$04
.C:cbe6  8D 00 DD    STA $DD00
.C:cbe9  A9 CC       LDA #$CC
.C:cbeb  8D 88 02    STA $0288
.C:cbee  AD 18 D0    LDA $D018
.C:cbf1  29 0E       AND #$0E
.C:cbf3  09 38       ORA #$38
.C:cbf5  8D 18 D0    STA $D018
.C:cbf8  60          RTS
.C:cbf9  20 E4 CB    JSR $CBE4
.C:cbfc  4C 8B E3    JMP $E38B
.C:cbff  EA          NOP
